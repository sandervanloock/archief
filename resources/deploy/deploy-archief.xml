<?xml version="1.0"?>
<project name="Deploy archive to FTP-server" basedir="../../../..//" default="deploy.archieve.front">

    <property name="ftp.host" value="ftp.chiroelzestraat.be"/>
    <property name="ftp.dir" value="/archief"/>
    <property name="ftp.user" value="chiroelzestraat.be"/>
    <property name="ftp.password" value="leider"/>
    <property name="module.api" value="backend"/>
    <property name="module.front" value="front"/>

    <property name="module.to.deploy">${module}</property>

    <target name="deploy.archive" description="Deploy backend and frontend to production">
        <antcall target="deploy.archive.backend"/>
        <antcall target="deploy.archive.front"/>
    </target>

    <target name="deploy.archive.front" description="Puts all the resouce files on ftp server">
        <antcall target="grunt.build">
            <param name="param1" value="production"/>
        </antcall>
        <ftp server="${ftp.host}"
             remotedir="${ftp.dir}/front"
             userid="${ftp.user}"
             password="${ftp.password}"
             verbose="yes"
             passive="yes"
             depends="yes">
            <fileset dir="archief/front">
                <include name="**/*.html"/>
                <exclude name="properties.js"/>
                <exclude name=".tmp/**"/>
                <exclude name="dist/**"/>
                <exclude name="node_modules/**"/>
                <exclude name="js/vendor/**"/>
                <exclude name="css/vendor/**"/>
                <exclude name="bower_components/**"/>
                <exclude name="test/**"/>
                <include name="**/*.js"/>
                <include name="**/*.css"/>
                <!--vendor CSS images-->
                <include name="**/*.png"/>
                <include name="**/*.gif"/>
                <!--vendor fonts-->
                <include name="**/*.eot"/>
                <include name="**/*.svg"/>
                <include name="**/*.ttf"/>
                <include name="**/*.woff"/>
            </fileset>
        </ftp>
        <antcall target="grunt.build">
            <param name="param1" value="development"/>
        </antcall>
    </target>

    <target name="deploy.module.archive.backend" description="Puts all the resouce files on ftp server">
        <ftp server="${ftp.host}"
             remotedir="${ftp.dir}/backend/module/${module.to.deploy}"
             userid="${ftp.user}"
             password="${ftp.password}"
             verbose="yes"
             passive="yes">
            <fileset dir="archief/backend/module/${module.to.deploy}">
                <include name="**/*.php"/>
                <include name="**/*.phtml"/>
                <include name="**/*.mo"/>
                <include name="**/*.po"/>
            </fileset>
        </ftp>
    </target>

    <target name="deploy.archive.backend" description="Deploys all archive backend modules">
        <antcall target="deploy.module.archive.backend">
            <param name="module.to.deploy" value="User"/>
        </antcall>
        <antcall target="deploy.module.archive.backend">
            <param name="module.to.deploy" value="Photo"/>
        </antcall>
        <antcall target="deploy.module.archive.backend">
            <param name="module.to.deploy" value="Event"/>
        </antcall>
        <antcall target="deploy.module.archive.backend">
            <param name="module.to.deploy" value="Sponsor"/>
        </antcall>
        <antcall target="deploy.module.archive.backend">
            <param name="module.to.deploy" value="Group"/>
        </antcall>
    </target>

    <target name="deploy.archive.rommelmarkt" description="Puts all the rommelmarkt resouce files on ftp server">
        <ftp server="${ftp.host}"
             remotedir="${ftp.dir}/rommelmarkt/dist"
             userid="${ftp.user}"
             password="${ftp.password}"
             verbose="yes"
             passive="yes">
            <fileset dir="rommelmarkt/dist">
                <include name="**/*.html"/>
                <exclude name="properties.js"/>
                <include name="**/*.js"/>
                <include name="**/*.css"/>
                <!--vendor CSS images-->
                <include name="**/*.png"/>
                <include name="**/*.gif"/>
                <!--vendor fonts-->
                <include name="**/*.eot"/>
                <include name="**/*.svg"/>
                <include name="**/*.ttf"/>
                <include name="**/*.woff"/>
                <include name="**/*.htaccess"/>
            </fileset>
        </ftp>
    </target>

    <target name="grunt.build">
        <exec-node module="grunt">
            <arg value="replace:${param1}" />
        </exec-node>
    </target>

    <macrodef name="exec-node">
        <attribute name="module" description="The name of the NodeJS module to execute"/>
        <attribute name="failonerror" default="true" description="Fail if the exit code is not 0"/>
        <element name="args" implicit="yes" description="Argument to pass to the exec task"/>
        <sequential>
            <exec executable="cmd.exe" failonerror="@{failonerror}" osfamily="winnt" dir="C:\Projects\archief\front">
                <arg line="/c  @{module}" />
                <args/>

                <!-- Windows cmd output workaround: http://stackoverflow.com/a/10359327/227349 -->
                <!-- Forces node's stderror and stdout to a temporary file -->
                <!--<arg line=" &gt; _tempfile.out 2&lt;&amp;1"/>-->

                <!-- If command exits with an error, then output the temporary file        -->
                <!-- to stdout delete the temporary file and finally exit with error level 1  -->
                <!-- so that the apply task can catch the error if @failonerror="true"        -->
                <!--<arg line=" || (type _tempfile.out &amp; del _tempfile.out &amp; exit /b 1)"/>-->

                <!-- Otherwise, just type the temporary file and delete it-->
                <!--<arg line=" &amp; type _tempfile.out &amp; del _tempfile.out &amp;"/>-->
            </exec>
            <exec executable="@{module}" failonerror="@{failonerror}" osfamily="unix">
                <args/>
            </exec>
        </sequential>
    </macrodef>
</project>
